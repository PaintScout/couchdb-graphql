"use strict";var n=require("apollo-server-core");require("isomorphic-fetch");var e,t=(e=require("qs"))&&"object"==typeof e&&"default"in e?e.default:e,r=require("@apollo/federation");function o(){return(o=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}function i(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)e.indexOf(t=i[r])>=0||(o[t]=n[t]);return o}function s(n,e){return e||(e=n.slice(0)),n.raw=e,n}function c(){var n=s(["\n    scalar JSON\n  "]);return c=function(){return n},n}var u={typeDefs:n.gql(c())};function a(n){return n}function l(n){if(n.status>=200&&n.status<300)return n.json();var e=new Error(n.statusText);throw e.response=n,e}"undefined"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator"))),"undefined"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol("Symbol.asyncIterator")));var d=function(n,e){try{var t=e.couchDb,r=t.fetch,s=t.dbName,c=t.dbUrl,u=t.onResolveConflict,a=t.onConflictsResolved;return u?Promise.resolve(f(n,e)).then((function(n){return Promise.resolve(Promise.all(Object.keys(n).map((function(t){try{return Promise.resolve(u({document:n[t].document,conflicts:n[t].conflicts,context:e})).then((function(e){if(!e)throw new Error("onResolveConflict must return a document");return o({},i(e,["_conflicts"]),{_rev:n[t].revToSave})}))}catch(n){return Promise.reject(n)}})))).then((function(t){var i=[].concat(t,Object.keys(n).reduce((function(e,t){return[].concat(e,n[t].conflicts.map((function(n){return o({},n,{_deleted:!0})})).filter((function(e){return e._rev!==n[t].revToSave})))}),[]));return Promise.resolve(r(c+"/"+s+"/_bulk_docs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({docs:i})}).then(l)).then((function(n){return a&&a({documents:n.filter((function(n){return n.ok})).map((function(n){return o({},i.find((function(e){return e._id===n.id})),{_rev:n.rev,_id:n.id})})),context:e}),n}))}))})):Promise.resolve(null)}catch(n){return Promise.reject(n)}},f=function(n,e){try{var t=e.couchDb,r=t.fetch,i=t.dbUrl,s=t.dbName;return Promise.resolve(r(i+"/"+s+"/_all_docs?conflicts=true&include_docs=true",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({keys:n.map((function(n){return n._id}))})}).then(l).then((function(n){return n.rows.map((function(n){return n.doc})).filter((function(n){return!!n}))}))).then((function(e){return Promise.resolve(r(i+"/"+s+"/_bulk_get",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({docs:e.reduce((function(n,e){return[].concat(n,(e&&e._conflicts||[]).map((function(n){return{id:e._id,rev:n}})))}),[])})}).then(l).then((function(n){return n.results.map((function(n){return n.docs[0].ok})).filter((function(n){return!!n}))}))).then((function(t){return e.reduce((function(r,i){if(!r[i._id]){var s=e.find((function(n){return n._id===i._id}));r[i._id]={document:n.find((function(n){return n._id===i._id})),conflicts:[i],revToSave:s._rev}}var c,u=t.filter((function(n){return n._id===i._id}));return u?o({},r,((c={})[i._id]=o({},r[i._id],{conflicts:[].concat(r[i._id].conflicts,u)}),c)):r}),{})}))}))}catch(n){return Promise.reject(n)}},p=function(n,e,t){void 0===t&&(t={});try{var r=function(t){return i?t:Promise.resolve(c(h,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({docs:[o({},e,{_rev:y})],new_edits:_})}).then(l).then((function(t){try{var r=!1,o=t[0],i=function(){if(o&&o.id&&"conflict"===o.error)return Promise.resolve(d([e],n)).then((function(n){return r=!0,n[0]}))}();return Promise.resolve(i&&i.then?i.then((function(n){return r?n:o})):r?i:o)}catch(n){return Promise.reject(n)}}))).then((function(t){if(t&&t.error)throw new Error(t.reason);if(t){var r=o({},e,{_id:t.id,_rev:t.rev});return f&&f({documents:[r],context:n}),r}return null}))},i=!1,s=n.couchDb,c=s.fetch,u=s.dbUrl,a=s.dbName,f=s.onDocumentsSaved,p=t.upsert,v=t.new_edits,_=void 0===v||v,h=u+"/"+a+"/_bulk_docs",y=e._rev,m=function(){if(p){if(!e._id)throw Error("upsert option requires input to contain _id");return function(n,t){try{var r=Promise.resolve(c(u+"/"+a+"/"+encodeURIComponent(e._id)).then(l)).then((function(n){y=n._rev}))}catch(n){return t(n)}return r&&r.then?r.then(void 0,t):r}(0,(function(n){if(!n.response||404!==n.response.status)throw n}))}}();return Promise.resolve(m&&m.then?m.then(r):r(m))}catch(n){return Promise.reject(n)}};function v(){var n=s(["\n  type PutResponse {\n    _id: String!\n    _rev: String\n    document: JSON\n  }\n\n  extend type Mutation {\n    put(input: JSON, upsert: Boolean, new_edits: Boolean): PutResponse\n  }\n"]);return v=function(){return n},n}var _=function(n,e,t){void 0===t&&(t={});try{var r=function(){return Promise.resolve(s(_,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({docs:e.map((function(n){return o({},n,{_rev:f&&n._id?h[n._id]:n._rev})})),new_edits:v})}).then(l).then((function(t){try{var r=!1,o=t.filter((function(n){return"conflict"===n.error})),i=function(){if(o.length>0)return Promise.resolve(d(e.filter((function(n){return o.find((function(e){return e.id===n._id}))})),n)).then((function(n){if(n)return r=!0,t.map((function(e){var t=n.find((function(n){return n.id===e.id}));return"conflict"===e.error&&t?t:e}))}))}();return Promise.resolve(i&&i.then?i.then((function(n){return r?n:t})):r?i:t)}catch(n){return Promise.reject(n)}}))).then((function(t){var r=t.map((function(n,t){var r=e[t],i=n.error?h[r._id]||r._rev:n.rev;return{_id:n.id,_rev:i,error:n.error,reason:n.reason,document:o({},r,{_id:n.id,_rev:i})}}));return a&&a({documents:r.filter((function(n){return!n.error})).map((function(n){return n.document})),context:n}),r}))},i=n.couchDb,s=i.fetch,c=i.dbUrl,u=i.dbName,a=i.onDocumentsSaved,f=t.upsert,p=t.new_edits,v=void 0===p||p,_=c+"/"+u+"/_bulk_docs",h={},y=function(){if(f){var n=e.map((function(n){return n._id})).filter((function(n){return!!n}));return Promise.resolve(s(c+"/"+u+"/_all_docs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({keys:n})}).then(l)).then((function(n){n.data.rows.forEach((function(n){h[n.id]=n.value?n.value.rev:null}))}))}}();return Promise.resolve(y&&y.then?y.then(r):r())}catch(n){return Promise.reject(n)}};function h(){var n=s(["\n  type BulkDocsResponseObject {\n    _id: String\n    _rev: String\n    document: JSON\n    error: String\n    reason: String\n  }\n\n  extend type Mutation {\n    bulkDocs(\n      input: [JSON!]!\n      upsert: Boolean\n      new_edits: Boolean\n    ): [BulkDocsResponseObject]\n  }\n"]);return h=function(){return n},n}var y={__proto__:null,put:{__proto__:null,typeDefs:n.gql(v()),resolvers:a({Mutation:{put:function(n,e,t,r){var o=e.input,i=e.upsert,s=e.new_edits,c=void 0===s||s;try{return Promise.resolve(p(t,o,{upsert:i,new_edits:c})).then((function(n){return{_id:n._id,_rev:n._rev,document:n}}))}catch(n){return Promise.reject(n)}}}})},bulkDocs:{__proto__:null,typeDefs:n.gql(h()),resolvers:a({Mutation:{bulkDocs:function(n,e,t,r){var o=e.input,i=e.upsert,s=e.new_edits,c=void 0===s||s;try{return Promise.resolve(_(t,o,{upsert:i,new_edits:c}))}catch(n){return Promise.reject(n)}}}})}},m=function(n,e){var r=void 0===e?{}:e,o=r.keys,s=r.key,c=r.endkey,u=r.startkey,a=i(r,["keys","key","endkey","startkey"]);try{var d=n.couchDb.fetch,f=n.couchDb.dbUrl+"/"+n.couchDb.dbName+"/_all_docs";return a&&(f+="?"+t.stringify(a)),Promise.resolve(d(f,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({keys:o,key:s,endkey:c,startkey:u})}).then(l))}catch(n){return Promise.reject(n)}};function g(){var n=s(["\n  type AllDocsRow {\n    id: String!\n    rev: String\n    value: JSON\n    doc: JSON\n  }\n\n  type AllDocsResponse {\n    total_rows: Int!\n    offset: Int!\n    rows: [AllDocsRow!]!\n  }\n\n  extend type Query {\n    allDocs(\n      conflicts: Boolean\n      endkey: JSON\n      include_docs: Boolean\n      inclusive_end: Boolean\n      key: JSON\n      keys: [JSON!]\n      limit: Int\n      skip: Int\n      startkey: JSON\n      update_seq: Boolean\n    ): AllDocsResponse\n  }\n"]);return g=function(){return n},n}var S={__proto__:null,typeDefs:n.gql(g()),resolvers:a({Query:{allDocs:function(n,e,t,r){try{return Promise.resolve(m(t,e))}catch(n){return Promise.reject(n)}}}})},b=function(n,e,r){var o=r.revs;try{var i=e.couchDb,s=i.fetch,c=i.dbUrl+"/"+i.dbName+"/_bulk_get";return o&&(c+="?"+t.stringify({revs:o})),Promise.resolve(s(c,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({docs:n,revs:o})}).then(l))}catch(n){return Promise.reject(n)}};function P(){var n=s(["\n  input BulkGetInput {\n    id: String!\n    rev: String\n  }\n\n  type BulkGetResponse {\n    results: [BulkGetResult!]!\n  }\n\n  type BulkGetResult {\n    id: String\n    docs: [BulkGetDocs!]!\n  }\n\n  type BulkGetDocs {\n    ok: JSON\n    error: BulkGetError\n  }\n\n  type BulkGetError {\n    id: String\n    rev: String\n    error: String\n    reason: String\n  }\n\n  extend type Query {\n    bulkGet(docs: [BulkGetInput!]!, revs: Boolean): BulkGetResponse\n  }\n"]);return P=function(){return n},n}var k={__proto__:null,typeDefs:n.gql(P()),resolvers:a({Query:{bulkGet:function(n,e,t,r){var o=e.docs,i=e.revs;try{return Promise.resolve(b(o,t,{revs:i}))}catch(n){return Promise.reject(n)}}}})},O=function(n,e){try{var r=n.couchDb.fetch,o=Object.keys(e).length>0,i=n+"/"+n+"/_changes";return o&&(e.lastEventId&&(delete e.lastEventId,e["last-event-id"]=e.lastEventId),e.since&&"now"!==e.since&&(e.since=parseInt(e.since)),i+="?"+t.stringify(e)),Promise.resolve(r(i).then(l))}catch(n){return Promise.reject(n)}};function I(){var n=s(["\n  type Change {\n    rev: String\n  }\n  type ChangesResult {\n    changes: [Change]\n    id: String\n    seq: JSON\n    doc: JSON\n    deleted: Boolean\n  }\n\n  type ChangesResponse {\n    last_seq: JSON\n    pending: Int\n    results: [ChangesResult]\n  }\n\n  extend type Query {\n    changes(\n      doc_ids: [String!]\n      conflicts: Boolean\n      descending: Boolean\n      feed: String\n      filter: String\n      heartbeat: Int\n      include_docs: Boolean\n      attachments: Boolean\n      att_encoding_info: Boolean\n      lastEventId: Int\n      limit: Int\n      since: String\n      timeout: Int\n      view: String\n      seq_interval: Int\n    ): ChangesResponse\n  }\n"]);return I=function(){return n},n}var N={__proto__:null,typeDefs:n.gql(I()),resolvers:a({Query:{changes:function(n,e,t,r){try{return Promise.resolve(O(t,e))}catch(n){return Promise.reject(n)}}}})},j=function(n,e){try{var t=n.couchDb;return Promise.resolve((0,t.fetch)(t.dbUrl+"/"+t.dbName+"/_find",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(l))}catch(n){return Promise.reject(n)}},B=function(n,e,r){void 0===r&&(r={});try{var o=n.couchDb,i=o.fetch,s=o.dbUrl,c=o.dbName,u=Object.keys(r).length>0,a=s+"/"+c+"/"+encodeURIComponent(e);return u&&(a+="?"+t.stringify(r)),Promise.resolve(i(a).then(l))}catch(n){return Promise.reject(n)}},D=function(n){try{var e=n.couchDb;return Promise.resolve((0,e.fetch)(e.dbUrl+"/"+e.dbName).then(l))}catch(n){return Promise.reject(n)}},w=function(n,e){var r=e.view,o=e.ddoc,s=i(e,["view","ddoc"]);try{var c=n.couchDb,u=c.fetch,a=c.dbUrl+"/"+c.dbName+"/_design/"+o+"/_view/"+r;return Object.keys(s).length>0&&(a+="?"+t.stringify(s)),Promise.resolve(u(a).then(l))}catch(n){return Promise.reject(n)}},J=function(n,e){var t=e.index,r=e.ddoc,o=i(e,["index","ddoc"]);try{var s=n.couchDb;return Promise.resolve((0,s.fetch)(s.dbUrl+"/"+s.dbName+"/_design/"+r+"/_search/"+t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}).then(l))}catch(n){return Promise.reject(n)}};function x(){var n=s(["\n  type FindResponse {\n    execution_stats: JSON\n    bookmark: String\n    warning: String\n    docs: [JSON!]\n  }\n\n  extend type Query {\n    find(\n      selector: JSON!\n      limit: Int\n      skip: Int\n      sort: Int\n      fields: [String!]\n      use_index: [String!]\n      r: Int\n      bookmark: String\n      update: Boolean\n      stable: Boolean\n      stale: String\n      execution_stats: Boolean\n    ): FindResponse\n  }\n"]);return x=function(){return n},n}var R={__proto__:null,typeDefs:n.gql(x()),resolvers:a({Query:{find:function(n,e,t,r){try{return Promise.resolve(j(t,e))}catch(n){return Promise.reject(n)}}}})};function q(){var n=s(["\n  type GetResponse {\n    _id: String!\n    _rev: String\n    document: JSON\n  }\n\n  extend type Query {\n    get(\n      id: String!\n      rev: String\n      revs: Boolean\n      revs_info: Boolean\n      open_revs: Boolean\n      conflicts: Boolean\n      attachments: Boolean\n      latest: Boolean\n    ): GetResponse\n  }\n"]);return q=function(){return n},n}var C={__proto__:null,typeDefs:n.gql(q()),resolvers:a({Query:{get:function(n,e,t,r){var o=e.id,s=i(e,["id"]);try{return Promise.resolve(B(t,o,s)).then((function(n){return{_id:n._id,_rev:n._rev,document:n}}))}catch(n){return Promise.reject(n)}}}})};function T(){var n=s(["\n  type Sizes {\n    file: Int\n    external: Int\n    active: Int\n  }\n\n  type Other {\n    data_size: Int\n  }\n\n  type Cluster {\n    q: Int\n    n: Int\n    w: Int\n    r: Int\n  }\n\n  type InfoResponse {\n    db_name: String\n    update_seq: String\n    sizes: Sizes\n    purge_seq: Int\n    other: Other\n    doc_del_count: Int\n    doc_count: Int\n    disk_size: Int\n    disk_format_version: Int\n    data_size: Int\n    compact_running: Boolean\n    cluster: Cluster\n    instance_start_time: Int\n  }\n\n  extend type Query {\n    info: InfoResponse\n  }\n"]);return T=function(){return n},n}var Q={__proto__:null,typeDefs:n.gql(T()),resolvers:a({Query:{info:function(n,e,t){try{return Promise.resolve(D(t))}catch(n){return Promise.reject(n)}}}})};function G(){var n=s(["\n  type QueryResponse {\n    offset: Int\n    update_seq: JSON\n    total_rows: Int\n    rows: [QueryRow!]\n  }\n\n  type QueryRow {\n    id: String\n    key: JSON\n    value: JSON\n  }\n\n  extend type Query {\n    query(\n      ddoc: String!\n      view: String!\n      conflicts: Boolean\n      descending: Boolean\n      endkey: JSON\n      group: Boolean\n      group_level: Int\n      include_docs: Boolean\n      attachments: Boolean\n      att_encoding_info: Boolean\n      inclusive_end: Boolean\n      key: JSON\n      keys: [JSON!]\n      limit: Int\n      reduce: Boolean\n      skip: Int\n      sorted: Boolean\n      stable: Boolean\n      stale: String\n      startkey: JSON\n      update: String\n      update_seq: Boolean\n    ): QueryResponse\n  }\n"]);return G=function(){return n},n}var U={__proto__:null,typeDefs:n.gql(G()),resolvers:a({Query:{query:function(n,e,t,r){try{return Promise.resolve(w(t,e))}catch(n){return Promise.reject(n)}}}})};function E(){var n=s(["\n  type SearchResponse {\n    total_rows: Int!\n    bookmark: String!\n    rows: [SearchRow]!\n    counts: JSON\n  }\n\n  type SearchRow {\n    id: String!\n    order: [Int!]!\n    fields: JSON!\n    doc: JSON\n  }\n\n  extend type Query {\n    search(\n      index: String!\n      ddoc: String!\n      bookmark: String\n      counts: [String!]\n      drilldown: JSON\n      group_field: String\n      group_limit: Int\n      group_sort: JSON\n      highlight_fields: [String!]\n      highlight_pre_tag: String\n      highlight_post_tag: String\n      highlight_number: Int\n      highlight_size: Int\n      include_docs: Boolean\n      include_fields: [String!]\n      limit: Int\n      query: String!\n      ranges: JSON\n      sort: [String!]\n      stale: String\n    ): SearchResponse\n  }\n"]);return E=function(){return n},n}var z={__proto__:null,get:C,info:Q,bulkGet:k,changes:N,search:{__proto__:null,typeDefs:n.gql(E()),resolvers:a({Query:{search:function(n,e,t,r){try{return Promise.resolve(J(t,e))}catch(n){return Promise.reject(n)}}}})},find:R,query:U,allDocs:S};exports.allDocs=m,exports.base=u,exports.bulkDocs=_,exports.bulkGet=b,exports.changes=O,exports.createContext=function(n){return{couchDb:o({fetch:fetch},n)}},exports.createResolver=a,exports.createSchema=function(n){var e=void 0===n?{}:n,t=e.schemas,o=void 0===t?[]:t,s=e.cloudant,c=void 0===s||s,a=i(z,["search"]);return r.buildFederatedSchema([u].concat(Object.keys(c?z:a).map((function(n){return z[n]})),Object.keys(y).map((function(n){return y[n]})),o))},exports.find=j,exports.get=B,exports.info=D,exports.mutations=y,exports.put=p,exports.queries=z,exports.query=w,exports.resolveConflicts=d,exports.search=J;
//# sourceMappingURL=couchdb-graphql.cjs.production.min.js.map
