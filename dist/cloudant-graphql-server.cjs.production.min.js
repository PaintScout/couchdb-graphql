"use strict";function n(n){return n&&"object"==typeof n&&"default"in n?n.default:n}var e=require("apollo-server"),t=require("@apollo/federation"),r=n(require("axios")),o=n(require("query-string")),i=require("apollo-server-core");function s(){return(s=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}function u(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)e.indexOf(t=i[r])>=0||(o[t]=n[t]);return o}function a(n,e){return e||(e=n.slice(0)),n.raw=e,n}function l(n){return n}function c(){var n=a(["\n  type GetResponse {\n    _id: String!\n    _rev: String\n    document: JSON\n  }\n\n  extend type Query {\n    get(\n      id: String!\n      rev: String\n      revs: Boolean\n      revs_info: Boolean\n      open_revs: Boolean\n      conflicts: Boolean\n      attachments: Boolean\n      latest: Boolean\n    ): GetResponse\n  }\n"]);return c=function(){return n},n}var d={__proto__:null,typeDefs:e.gql(c()),resolvers:l({Query:{get:function(n,e,t,i){var s=e.id,a=u(e,["id"]);try{var l=Object.keys(a).length>0,c=t.dbUrl+"/"+s;return l&&(c+="?"+o.stringify(a)),Promise.resolve(r.get(c)).then((function(n){return{_id:n.data._id,_rev:n.data._rev,document:n.data}}))}catch(n){return Promise.reject(n)}}}})};function _(){var n=a(["\n  type Change {\n    rev: String\n  }\n  type ChangesResult {\n    changes: [Change]\n    id: String\n    seq: JSON\n    doc: JSON\n    deleted: Boolean\n  }\n\n  type ChangesResponse {\n    last_seq: JSON\n    pending: Int\n    results: [ChangesResult]\n  }\n\n  extend type Query {\n    changes(\n      doc_ids: [String!]\n      conflicts: Boolean\n      descending: Boolean\n      feed: String\n      filter: String\n      heartbeat: Int\n      include_docs: Boolean\n      attachments: Boolean\n      att_encoding_info: Boolean\n      lastEventId: Int\n      limit: Int\n      since: String\n      timeout: Int\n      view: String\n      seq_interval: Int\n    ): ChangesResponse\n  }\n"]);return _=function(){return n},n}var f={__proto__:null,typeDefs:e.gql(_()),resolvers:l({Query:{changes:function(n,e,t,i){try{var s=Object.keys(e).length>0,u=t.dbUrl+"/_changes";return s&&(e.lastEventId&&(delete e.lastEventId,e["last-event-id"]=e.lastEventId),e.since&&"now"!==e.since&&(e.since=parseInt(e.since)),u+="?"+o.stringify(e)),Promise.resolve(r.get(u)).then((function(n){return n.data}))}catch(n){return Promise.reject(n)}}}})};function p(){var n=a(["\n  input BulkGetInput {\n    id: String!\n    rev: String\n  }\n\n  type BulkGetResponse {\n    results: [BulkGetResult]\n  }\n\n  type BulkGetResult {\n    id: String\n    docs: [BulkGetDocs!]!\n  }\n\n  type BulkGetDocs {\n    ok: JSON\n    error: BulkGetError\n  }\n\n  type BulkGetError {\n    id: String\n    rev: String\n    error: String\n    reason: String\n  }\n\n  extend type Query {\n    bulkGet(docs: [BulkGetInput!]!, revs: Boolean): BulkGetResponse\n  }\n"]);return p=function(){return n},n}var g={__proto__:null,typeDefs:e.gql(p()),resolvers:l({Query:{bulkGet:function(n,e,t,i){var s=e.docs,u=e.revs;try{var a=t.dbUrl+"/_bulk_get";return u&&(a+="?"+o.stringify({revs:u})),Promise.resolve(r.post(a,{docs:s,revs:u})).then((function(n){return n.data}))}catch(n){return Promise.reject(n)}}}})};function v(){var n=a(["\n  type Sizes {\n    file: Int\n    external: Int\n    active: Int\n  }\n\n  type Other {\n    data_size: Int\n  }\n\n  type Cluster {\n    q: Int\n    n: Int\n    w: Int\n    r: Int\n  }\n\n  type InfoResponse {\n    db_name: String\n    update_seq: String\n    sizes: Sizes\n    purge_seq: Int\n    other: Other\n    doc_del_count: Int\n    doc_count: Int\n    disk_size: Int\n    disk_format_version: Int\n    data_size: Int\n    compact_running: Boolean\n    cluster: Cluster\n    instance_start_time: Int\n  }\n\n  extend type Query {\n    info: InfoResponse\n  }\n"]);return v=function(){return n},n}function y(){var n=a(["\n  type SearchResponse {\n    total_rows: Int\n    bookmark: String\n    rows: [SearchRow]\n    counts: JSON\n  }\n\n  type SearchRow {\n    id: String\n    order: [Int]\n    fields: JSON\n  }\n\n  extend type Query {\n    search(\n      index: String!\n      ddoc: String!\n      bookmark: String\n      counts: [String!]\n      drilldown: JSON\n      group_field: String\n      group_limit: Int\n      group_sort: JSON\n      highlight_fields: [String!]\n      highlight_pre_tag: String\n      highlight_post_tag: String\n      highlight_number: Int\n      highlight_size: Int\n      include_docs: Boolean\n      include_fields: [String]\n      limit: Int\n      query: String!\n      ranges: JSON\n      sort: String\n      stale: String\n    ): SearchResponse\n  }\n"]);return y=function(){return n},n}function S(){var n=a(["\n  type FindResponse {\n    execution_stats: JSON\n    bookmark: String\n    warning: String\n    docs: [JSON!]\n  }\n\n  type FindRow {\n    id: String\n    order: [Int!]\n    fields: JSON\n  }\n\n  extend type Query {\n    find(\n      selector: JSON!\n      limit: Int\n      skip: Int\n      sort: Int\n      fields: [String!]\n      use_index: [String!]\n      r: Int\n      bookmark: String\n      update: Boolean\n      stable: Boolean\n      stale: String\n      execution_stats: Boolean\n    ): FindResponse\n  }\n"]);return S=function(){return n},n}function h(){var n=a(["\n  type QueryResponse {\n    offset: Int\n    update_seq: JSON\n    total_rows: Int\n    rows: [QueryRow!]\n  }\n\n  type QueryRow {\n    id: String\n    key: JSON\n    value: JSON\n  }\n\n  extend type Query {\n    query(\n      ddoc: String!\n      view: String!\n      conflicts: Boolean\n      descending: Boolean\n      endkey: JSON\n      group: Boolean\n      group_level: Int\n      include_docs: Boolean\n      attachments: Boolean\n      att_encoding_info: Boolean\n      inclusive_end: Boolean\n      key: JSON\n      keys: [JSON!]\n      limit: Int\n      reduce: Boolean\n      skip: Int\n      sorted: Boolean\n      stable: Boolean\n      stale: String\n      startkey: JSON\n      update: String\n      update_seq: Boolean\n    ): QueryResponse\n  }\n"]);return h=function(){return n},n}var m={__proto__:null,get:d,info:{__proto__:null,typeDefs:e.gql(v()),resolvers:l({Query:{info:function(n,e,t,o){try{return Promise.resolve(r.get(""+t.dbUrl)).then((function(n){return n.data}))}catch(n){return Promise.reject(n)}}}})},bulkGet:g,changes:f,search:{__proto__:null,typeDefs:e.gql(y()),resolvers:l({Query:{search:function(n,e,t,i){var s=e.index,a=e.ddoc,l=u(e,["index","ddoc","typename"]);try{var c=t.dbUrl+"/_design/"+a+"/_search/"+s;return Object.keys(l).length>0&&(c+="?"+o.stringify(l)),Promise.resolve(r.get(c)).then((function(n){return n.data}))}catch(n){return Promise.reject(n)}}}})},find:{__proto__:null,typeDefs:e.gql(S()),resolvers:l({Query:{find:function(n,e,t,o){var i=u(e,["index","ddoc"]);try{return Promise.resolve(r.post(t.dbUrl+"/_find",i)).then((function(n){return n.data}))}catch(n){return Promise.reject(n)}}}})},query:{__proto__:null,typeDefs:e.gql(h()),resolvers:l({Query:{query:function(n,e,t,i){var s=e.view,a=e.ddoc,l=u(e,["view","ddoc"]);try{var c=t.dbUrl+"/_design/"+a+"/_view/"+s;return Object.keys(l).length>0&&(c+="?"+o.stringify(l)),Promise.resolve(r.get(c)).then((function(n){return n.data}))}catch(n){return Promise.reject(n)}}}})}};function b(){var n=a(["\n  type PutResponse {\n    _id: String!\n    _rev: String\n    document: JSON\n  }\n\n  extend type Mutation {\n    put(input: JSON, upsert: Boolean, new_edits: Boolean): PutResponse\n  }\n"]);return b=function(){return n},n}function I(){var n=a(["\n  type BulkDocsResponseObject {\n    _id: String\n    _rev: String\n    document: JSON\n    error: String\n    reason: String\n  }\n\n  extend type Mutation {\n    bulkDocs(\n      input: [JSON!]!\n      upsert: Boolean\n      new_edits: Boolean\n    ): [BulkDocsResponseObject]\n  }\n"]);return I=function(){return n},n}"undefined"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator"))),"undefined"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol("Symbol.asyncIterator")));var k={__proto__:null,put:{__proto__:null,typeDefs:e.gql(b()),resolvers:{Mutation:{put:function(n,e,t,o){var i=e.input,u=e.upsert,a=e.new_edits;try{var l=function(n){return c?n:Promise.resolve(r.post(d,{docs:[s({},i,{_rev:_})],new_edits:a})).then((function(n){var e=n.data[0];if(e.error)throw console.error(e.error+": "+e.reason),new Error(e.reason);return{_id:e.id,_rev:e.rev,document:s({},i,{_id:e.id,_rev:e.rev})}}))},c=!1,d=t.dbUrl+"/_bulk_docs",_=i._rev,f=function(){if(u){if(!i._id)throw Error("upsert option requires input to contain _id");return function(n,e){try{var o=Promise.resolve(r.get(t.dbUrl+"/"+i._id)).then((function(n){_=n.data._rev}))}catch(n){return e(n)}return o&&o.then?o.then(void 0,e):o}(0,(function(n){if(404!==n.status)throw n}))}}();return Promise.resolve(f&&f.then?f.then(l):l(f))}catch(n){return Promise.reject(n)}}}}},bulkDocs:{__proto__:null,typeDefs:e.gql(I()),resolvers:{Mutation:{bulkDocs:function(n,e,t,o){var i=e.input,u=e.upsert,a=e.new_edits;try{var l=function(){return Promise.resolve(r.post(c,{docs:i.map((function(n){return s({},n,{_rev:u&&n._id?d[n._id]:n._rev})})),new_edits:a})).then((function(n){return n.data.map((function(n,e){var t=i[e],r=n.error?d[t._id]||t._rev:n.rev;return{_id:n.id,_rev:r,error:n.error,reason:n.reason,document:s({},t,{_id:n.id,_rev:r})}}))}))},c=t.dbUrl+"/_bulk_docs",d={},_=function(){if(u){var n=i.map((function(n){return n._id})).filter((function(n){return!!n}));return Promise.resolve(r.post(t.dbUrl+"/_all_docs",{keys:n})).then((function(n){n.data.rows.forEach((function(n){d[n.id]=n.value.rev}))}))}}();return Promise.resolve(_&&_.then?_.then(l):l())}catch(n){return Promise.reject(n)}}}}}};function B(){var n=a(["\n    scalar JSON\n  "]);return B=function(){return n},n}require("dotenv").config(),exports.createServer=function(n){var r=(void 0===n?{}:n).setContext,o=e.gql(B());return new e.ApolloServer({schema:t.buildFederatedSchema([{typeDefs:o}].concat(Object.keys(m).map((function(n){return m[n]})),Object.keys(k).map((function(n){return k[n]})))),context:function(n){try{var e=function(){var n=t?t.headers.db:"";if(!n)throw new i.AuthenticationError("Authentication required");return s({dbName:n,dbUrl:process.env.PS_DB_ADMIN_URL+"/"+n},o)},t=n.req,o={},u=function(){if(r)return Promise.resolve(r(n)).then((function(n){o=n}))}();return Promise.resolve(u&&u.then?u.then(e):e())}catch(n){return Promise.reject(n)}}})};
//# sourceMappingURL=cloudant-graphql-server.cjs.production.min.js.map
