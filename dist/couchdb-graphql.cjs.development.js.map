{"version":3,"file":"couchdb-graphql.cjs.development.js","sources":["../src/graphql/base.ts","../node_modules/regenerator-runtime/runtime.js","../src/util/createResolver.ts","../src/util/parseFetchResponse.ts","../src/util/resolveConflicts.ts","../src/couchdb/put.ts","../src/graphql/mutations/put.ts","../src/couchdb/bulkDocs.ts","../src/graphql/mutations/bulkDocs.ts","../src/couchdb/allDocs.ts","../src/graphql/queries/allDocs.ts","../src/couchdb/bulkGet.ts","../src/graphql/queries/bulkGet.ts","../src/couchdb/changes.ts","../src/graphql/queries/changes.ts","../src/couchdb/find.ts","../src/couchdb/get.ts","../src/couchdb/info.ts","../src/couchdb/query.ts","../src/couchdb/search.ts","../src/couchdb/createDb.ts","../src/graphql/queries/find.ts","../src/graphql/queries/get.ts","../src/graphql/queries/info.ts","../src/graphql/queries/query.ts","../src/graphql/queries/search.ts","../src/createCouchDbModule.ts","../src/createContext.ts"],"sourcesContent":["import { gql } from 'apollo-server-core'\n\nexport const base = {\n  typeDefs: gql`\n    scalar JSON\n\n    type Query\n    type Mutation\n  `,\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { CouchDbContext } from '../createContext'\nimport { GraphQLFieldResolver } from 'graphql'\n\nexport function createResolver<T = any>(\n  resolver: GraphQLFieldResolver<any, CouchDbContext, T>\n) {\n  return resolver\n}\n","export default async function parseFetchResponse(response: Response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response.json()\n  } else {\n    const error = new Error(response.statusText)\n\n    // @ts-ignore\n    error.response = await response.json()\n    throw error\n  }\n}\n","import { CouchDbContext } from '../createContext'\nimport parseFetchResponse from './parseFetchResponse'\n\n/**\n * Returns an object where the key is the doc id and the value is the rejected document\n * and full conflicting documents\n */\nasync function getConflictsByDocument(\n  documents: any[],\n  context: CouchDbContext\n): Promise<\n  Record<string, { document: any; conflicts: any[]; revToSave: string }>\n> {\n  const { fetch, dbUrl, dbName } = context.couchDb\n\n  // get _conflicts for each document\n  const documentsWithConflictRevs = await fetch(\n    `${dbUrl}/${dbName}/_all_docs?conflicts=true&include_docs=true`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        keys: documents.map((doc) => doc._id),\n      }),\n    }\n  )\n    .then(parseFetchResponse)\n    .then((res) => {\n      return res.rows.map((row) => row.doc).filter((doc) => !!doc)\n    })\n\n  // get full document for each _conflict\n  const conflictingDocuments = await fetch(`${dbUrl}/${dbName}/_bulk_get`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      docs: documentsWithConflictRevs.reduce(\n        (conflicts, doc) => [\n          ...conflicts,\n          ...((doc && doc._conflicts) || []).map((rev) => ({\n            id: doc._id,\n            rev,\n          })),\n        ],\n        []\n      ),\n    }),\n  })\n    .then(parseFetchResponse)\n    .then((res) =>\n      res.results.map((row) => row.docs[0].ok).filter((doc) => !!doc)\n    )\n\n  const result = documentsWithConflictRevs.reduce((result, doc) => {\n    if (!result[doc._id]) {\n      const conflictedDoc = documentsWithConflictRevs.find(\n        (d) => d._id === doc._id\n      )\n\n      result[doc._id] = {\n        // the document rejected by the conflict\n        document: documents.find((original) => original._id === doc._id),\n        // add the stored document in the conflicts array\n        conflicts: [doc],\n        revToSave: conflictedDoc._rev,\n      }\n    }\n\n    // check if any _conflicts were for this document\n    const conflicts = conflictingDocuments.filter((d) => d._id === doc._id)\n\n    if (conflicts) {\n      return {\n        ...result,\n        [doc._id]: {\n          ...result[doc._id],\n          conflicts: [...result[doc._id].conflicts, ...conflicts],\n        },\n      }\n    }\n\n    return result\n  }, {})\n\n  return result\n}\n\n/**\n * Resolves conflicts by calling context.onResolveConflict and saving its result\n */\nexport async function resolveConflicts(\n  documents: any[],\n  context: CouchDbContext\n) {\n  const {\n    fetch,\n    dbName,\n    dbUrl,\n    onResolveConflict,\n    onConflictsResolved,\n  } = context.couchDb\n  if (!onResolveConflict) {\n    return null\n  }\n\n  const conflictingDocuments = await getConflictsByDocument(documents, context)\n\n  const resolvedDocs = await Promise.all(\n    Object.keys(conflictingDocuments).map(async (id) => {\n      const resolvedDocument = await onResolveConflict!({\n        document: conflictingDocuments[id].document,\n        conflicts: conflictingDocuments[id].conflicts,\n        context,\n      })\n\n      if (resolvedDocument) {\n        const { _conflicts, ...resolved } = resolvedDocument\n        return {\n          ...resolved,\n          _rev: conflictingDocuments[id].revToSave,\n        }\n      }\n    })\n  ).then((res) => res.filter(Boolean))\n\n  const docsToSave = [\n    ...resolvedDocs,\n\n    ...Object.keys(conflictingDocuments).reduce(\n      (deleted, docId) => [\n        ...deleted,\n        ...conflictingDocuments[docId].conflicts\n          .map((conflict) => ({\n            ...conflict,\n            _deleted: true,\n          }))\n          .filter(\n            (conflict) =>\n              conflict._rev !== conflictingDocuments[docId].revToSave\n          ),\n      ],\n      [] as any[]\n    ),\n  ]\n\n  const response = await fetch(`${dbUrl}/${dbName}/_bulk_docs`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      docs: docsToSave,\n    }),\n  }).then(parseFetchResponse)\n\n  const resolvedDocuments = response\n    .filter((result) => result.ok)\n    .map((result) => ({\n      ...docsToSave.find((doc) => doc._id === result.id),\n      _rev: result.rev,\n      _id: result.id,\n    }))\n\n  if (onConflictsResolved && resolvedDocuments.length > 0) {\n    onConflictsResolved({\n      documents: resolvedDocuments,\n      context,\n    })\n  }\n\n  return response.map((doc, index) => ({\n    ...resolvedDocs[index],\n    _id: doc.id,\n    _rev: doc.rev,\n  }))\n}\n","import { resolveConflicts } from '../util/resolveConflicts'\nimport { CouchDbDocument } from '../types'\nimport { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\ninterface PutOptions {\n  upsert?: boolean\n  new_edits?: boolean\n}\n\nexport async function put<T extends CouchDbDocument>(\n  context: CouchDbContext,\n  doc: T,\n  options: PutOptions = {}\n): Promise<T | null> {\n  const { fetch, dbUrl, dbName, onDocumentsSaved } = context.couchDb\n\n  const { upsert, new_edits = true } = options\n  let url = `${dbUrl}/${dbName}/_bulk_docs`\n  let rev = doc._rev ?? undefined // don't let it be null\n\n  // couchdb errors if _deleted is null\n  if (doc._deleted === null) {\n    delete doc._deleted\n  }\n\n  // get previous _rev for upsert\n  if (upsert) {\n    if (!doc._id) {\n      throw Error('upsert option requires input to contain _id')\n    }\n\n    try {\n      const { _rev } = await fetch(\n        `${dbUrl}/${dbName}/${encodeURIComponent(doc._id)}`\n      ).then(parseFetchResponse)\n      rev = _rev\n    } catch (e) {\n      e._id = doc._id\n      if (!e.response || e.response.status !== 404) {\n        throw e\n      }\n    }\n  }\n\n  const result = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      docs: [{ ...doc, _rev: rev }],\n      new_edits,\n    }),\n  })\n    .then(parseFetchResponse)\n    .then(async (res) => {\n      const result = Array.isArray(res) ? res[0] : res\n\n      // resolve conflicts\n      if (result && result.id && result.error === 'conflict') {\n        const [resolved] = await resolveConflicts([doc], context)\n\n        if (resolved) {\n          return resolved\n        }\n      }\n\n      return { ...doc, _id: result.id, _rev: result.rev }\n    })\n\n  if (result && result.error) {\n    const err = new Error(result.reason)\n    // @ts-ignore\n    err._id = doc._id\n\n    throw err\n  }\n\n  if (result) {\n    if (onDocumentsSaved) {\n      onDocumentsSaved({ documents: [result], context })\n    }\n\n    return result\n  } else {\n    // new_edits=false returns empty response\n    return null\n  }\n}\n","import { gql } from 'apollo-server-core'\nimport { createResolver } from '../../util/createResolver'\nimport { put } from '../../couchdb/put'\n\n/**\n * PUTs a document using _bulk_docs endpoint\n */\nexport const typeDefs = gql`\n  type PutResponse {\n    _id: String!\n    _rev: String\n    document: JSON\n  }\n\n  extend type Mutation {\n    put(input: JSON, upsert: Boolean, new_edits: Boolean): PutResponse\n  }\n`\n\nexport const resolvers = {\n  Mutation: {\n    put: createResolver(\n      async (parent, { input, upsert, new_edits = true }, context, info) => {\n        const document = await put(context, input, { upsert, new_edits })\n\n        return {\n          _id: document._id,\n          _rev: document._rev,\n          document,\n        }\n      }\n    ),\n  },\n}\n","import { resolveConflicts } from '../util/resolveConflicts'\nimport { CouchDbDocument } from '../types'\nimport { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\nexport interface BulkDocsResponseObject<T extends CouchDbDocument> {\n  _id: string\n  _rev?: string\n  document?: T\n  error?: string\n  reason?: string\n}\n\nexport type BulkDocsResponse<\n  T extends CouchDbDocument\n> = BulkDocsResponseObject<T>[]\n\nexport interface BulkDocsOptions {\n  upsert?: boolean\n  new_edits?: boolean\n}\nexport async function bulkDocs<T extends CouchDbDocument>(\n  context: CouchDbContext,\n  docs: any[],\n  options: BulkDocsOptions = {}\n): Promise<BulkDocsResponse<T>> {\n  const { fetch, dbUrl, dbName, onDocumentsSaved } = context.couchDb\n  const { upsert, new_edits = true } = options\n  let url = `${dbUrl}/${dbName}/_bulk_docs`\n  let previousRevs: Record<string, string> = {}\n\n  // get previous _revs for upsert\n  if (upsert) {\n    const ids: string[] = docs.map((i) => i._id).filter((id) => !!id)\n\n    const { data: allDocs } = await fetch(`${dbUrl}/${dbName}/_all_docs`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        keys: ids,\n      }),\n    }).then(parseFetchResponse)\n\n    allDocs.rows.forEach((row) => {\n      previousRevs[row.id] = row.value ? row.value.rev : null\n    })\n  }\n\n  const saveResults = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      docs: docs.map((doc) => {\n        const docToSave = {\n          ...doc,\n          _rev:\n            // fallback to undefined if it is null\n            (upsert && doc._id ? previousRevs[doc._id] : doc._rev) ?? undefined,\n        }\n\n        if (docToSave._deleted === null) {\n          delete docToSave._deleted\n        }\n\n        return docToSave\n      }),\n      new_edits,\n    }),\n  })\n    .then(parseFetchResponse)\n    .then(async (res) => {\n      // resolve conflicts\n      const conflicts = res.filter((result) => result.error === 'conflict')\n\n      if (conflicts.length > 0) {\n        const resolved = await resolveConflicts(\n          docs.filter((doc) =>\n            conflicts.find((conflict) => conflict.id === doc._id)\n          ),\n          context\n        )\n\n        if (resolved) {\n          // update any \"conflict\" results with the resolved result\n          return res.map((saveResult) => {\n            const resolvedDoc = resolved.find(\n              (resolvedResult) => resolvedResult.id === saveResult.id\n            )\n            if (saveResult.error === 'conflict' && resolvedDoc) {\n              return resolvedDoc\n            }\n\n            return saveResult\n          })\n        }\n      }\n\n      // return bulkDocs data\n      return res\n    })\n\n  const response = saveResults.map((result, index) => {\n    const document = docs[index]\n\n    const _rev = result.error\n      ? // if an error, return the last _rev\n        previousRevs[document._id] || document._rev\n      : // otherwise result.rev will be populated\n        result.rev\n\n    return {\n      _id: result.id,\n      _rev,\n      error: result.error,\n      reason: result.reason,\n      document: {\n        ...document,\n        _id: result.id,\n        _rev,\n      },\n    }\n  })\n\n  if (onDocumentsSaved) {\n    onDocumentsSaved({\n      documents: response\n        .filter((res) => !res.error)\n        .map((res) => res.document),\n      context,\n    })\n  }\n\n  return response\n}\n","import { gql } from 'apollo-server-core'\nimport { createResolver } from '../../util/createResolver'\nimport { bulkDocs } from '../../couchdb/bulkDocs'\n\nexport const typeDefs = gql`\n  type BulkDocsResponseObject {\n    _id: String\n    _rev: String\n    document: JSON\n    error: String\n    reason: String\n  }\n\n  extend type Mutation {\n    bulkDocs(\n      input: [JSON!]!\n      upsert: Boolean\n      new_edits: Boolean\n    ): [BulkDocsResponseObject]\n  }\n`\n\nexport const resolvers = {\n  Mutation: {\n    bulkDocs: createResolver(\n      (parent, { input, upsert, new_edits = true }, context, info) => {\n        return bulkDocs(context, input, { upsert, new_edits })\n      }\n    ),\n  },\n}\n","import queryString from 'qs'\nimport { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\nexport interface AllDocsOptions {\n  conflicts?: boolean\n  endkey?: any | any[]\n  include_docs?: boolean\n  inclusive_end?: boolean\n  key?: any | any[]\n  keys?: any | any[]\n  limit?: number\n  skip?: number\n  startkey?: any | any[]\n  update_seq?: boolean\n}\n\nexport interface AllDocsResponse<T = any> {\n  total_rows: number\n  offset: number\n  rows: Array<{\n    id: string\n    rev?: string\n    value?: {\n      rev: string\n    }\n    doc?: T\n  }>\n}\n\nexport async function allDocs<T = any>(\n  context: CouchDbContext,\n  { keys, key, endkey, startkey, ...args }: AllDocsOptions = {}\n): Promise<AllDocsResponse<T>> {\n  const { fetch } = context.couchDb\n  let url = `${context.couchDb.dbUrl}/${context.couchDb.dbName}/_all_docs`\n\n  if (args) {\n    url += `?${queryString.stringify(args)}`\n  }\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      keys,\n      key,\n      endkey,\n      startkey,\n    }),\n  }).then(parseFetchResponse)\n\n  return response\n}\n","import { gql } from 'apollo-server-core'\nimport { createResolver } from '../../util/createResolver'\nimport { allDocs } from '../../couchdb/allDocs'\n\nexport const typeDefs = gql`\n  type AllDocsRow {\n    id: String!\n    rev: String\n    value: JSON\n    doc: JSON\n  }\n\n  type AllDocsResponse {\n    total_rows: Int!\n    offset: Int!\n    rows: [AllDocsRow!]!\n  }\n\n  extend type Query {\n    allDocs(\n      conflicts: Boolean\n      endkey: JSON\n      include_docs: Boolean\n      inclusive_end: Boolean\n      key: JSON\n      keys: [JSON!]\n      limit: Int\n      skip: Int\n      startkey: JSON\n      update_seq: Boolean\n    ): AllDocsResponse\n  }\n`\n\nexport const resolvers = {\n  Query: {\n    allDocs: createResolver((parent, args, context, info) => {\n      return allDocs(context, args)\n    }),\n  },\n}\n","import queryString from 'qs'\nimport { CouchDbDocument } from '../types'\nimport { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\nexport interface BulkGetOptions {\n  revs?: boolean\n}\n\nexport interface BulkGetResponse<T extends CouchDbDocument> {\n  results: Array<{\n    ok?: T\n    error?: {\n      id: string\n      rev?: string\n      error: string\n      reason: string\n    }\n  }>\n}\n\nexport async function bulkGet<T extends CouchDbDocument>(\n  docs: Array<{ id: string; rev?: string }>,\n  context: CouchDbContext,\n  { revs }: BulkGetOptions = {}\n): Promise<BulkGetResponse<T>> {\n  const { fetch, dbUrl, dbName } = context.couchDb\n  let url = `${dbUrl}/${dbName}/_bulk_get`\n\n  if (revs) {\n    url += `?${queryString.stringify({ revs })}`\n  }\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      docs,\n      revs,\n    }),\n  }).then(parseFetchResponse)\n\n  return response\n}\n","import { gql } from 'apollo-server-core'\nimport { createResolver } from '../../util/createResolver'\nimport { bulkGet } from '../../couchdb/bulkGet'\n\n/**\n * Generic GET on a document\n */\nexport const typeDefs = gql`\n  input BulkGetInput {\n    id: String!\n    rev: String\n  }\n\n  type BulkGetResponse {\n    results: [BulkGetResult!]!\n  }\n\n  type BulkGetResult {\n    id: String\n    docs: [BulkGetDocs!]!\n  }\n\n  type BulkGetDocs {\n    ok: JSON\n    error: BulkGetError\n  }\n\n  type BulkGetError {\n    id: String\n    rev: String\n    error: String\n    reason: String\n  }\n\n  extend type Query {\n    bulkGet(docs: [BulkGetInput!]!, revs: Boolean): BulkGetResponse\n  }\n`\n\nexport const resolvers = {\n  Query: {\n    bulkGet: createResolver((parent, { docs, revs }, context, info) => {\n      return bulkGet(docs, context, { revs })\n    }),\n  },\n}\n","import queryString from 'qs'\nimport { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\nexport interface ChangesOptions {\n  doc_ids?: string[]\n  conflicts?: boolean\n  descending?: boolean\n  feed?: string\n  filter?: string\n  heartbeat?: number\n  include_docs?: boolean\n  attachments?: boolean\n  att_encoding_info?: boolean\n  lastEventId?: number\n  limit?: number\n  since?: string | number\n  timeout?: number\n  view?: string\n  seq_interval?: number\n}\n\nexport interface ChangesResponse {\n  last_seq: any\n  pending: number\n  results: Array<{\n    changes: Array<{ rev: string }>\n    id: string\n    seq: any\n    doc: any\n    deleted?: boolean\n  }>\n}\nexport async function changes(\n  context: CouchDbContext,\n  options: ChangesOptions\n): Promise<ChangesResponse> {\n  const { fetch, dbUrl, dbName } = context.couchDb\n  const hasArgs = Object.keys(options).length > 0\n  let url = `${context}/${context}/_changes`\n\n  if (hasArgs) {\n    if (options.lastEventId) {\n      delete options.lastEventId\n      options['last-event-id'] = options.lastEventId\n    }\n\n    // if options.since is not 'now', convert to number\n    if (options.since && options.since !== 'now') {\n      options.since = parseInt(options.since as string)\n    }\n\n    url += `?${queryString.stringify(options)}`\n  }\n\n  const response = await fetch(url).then(parseFetchResponse)\n\n  return response\n}\n","import { gql } from 'apollo-server-core'\n\nimport { createResolver } from '../../util/createResolver'\nimport { changes } from '../../couchdb/changes'\n\nexport const typeDefs = gql`\n  type Change {\n    rev: String\n  }\n  type ChangesResult {\n    changes: [Change]\n    id: String\n    seq: JSON\n    doc: JSON\n    deleted: Boolean\n  }\n\n  type ChangesResponse {\n    last_seq: JSON\n    pending: Int\n    results: [ChangesResult]\n  }\n\n  extend type Query {\n    changes(\n      doc_ids: [String!]\n      conflicts: Boolean\n      descending: Boolean\n      feed: String\n      filter: String\n      heartbeat: Int\n      include_docs: Boolean\n      attachments: Boolean\n      att_encoding_info: Boolean\n      lastEventId: Int\n      limit: Int\n      since: String\n      timeout: Int\n      view: String\n      seq_interval: Int\n    ): ChangesResponse\n  }\n`\n\nexport const resolvers = {\n  Query: {\n    changes: createResolver((parent, args, context, info) => {\n      return changes(context, args)\n    }),\n  },\n}\n","import parseFetchResponse from '../util/parseFetchResponse'\nimport { CouchDbContext } from '../createContext'\n\nexport interface FindOptions {\n  selector?: any\n  limit?: number\n  skip?: number\n  sort?: number\n  fields?: string[]\n  use_index?: string[]\n  r?: number\n  bookmark?: string\n  update?: boolean\n  stable?: boolean\n  stale?: string\n  execution_stats?: boolean\n}\n\nexport interface FindResponse<T = any> {\n  execution_stats: any\n  bookmark: any\n  warning: string\n  docs: T[]\n}\n\nexport async function find<T = any>(\n  context: CouchDbContext,\n  options: FindOptions\n): Promise<FindResponse<T>> {\n  const { fetch, dbUrl, dbName } = context.couchDb\n  let url = `${dbUrl}/${dbName}/_find`\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(options),\n  }).then(parseFetchResponse)\n\n  return response\n}\n","import queryString from 'qs'\nimport { CouchDbDocument } from '../types'\nimport { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\nexport interface GetOptions {\n  rev?: string\n  revs?: boolean\n  revs_info?: boolean\n  open_revs?: boolean\n  conflicts?: boolean\n  attachments?: boolean\n  latest?: boolean\n}\n\nexport async function get<T extends CouchDbDocument>(\n  context: CouchDbContext,\n  id: string,\n  options: GetOptions = {}\n): Promise<T> {\n  const { fetch, dbUrl, dbName } = context.couchDb\n  const hasArgs = Object.keys(options).length > 0\n\n  if (!id) {\n    throw new Error('id is undefined')\n  }\n\n  let url = `${dbUrl}/${dbName}/${encodeURIComponent(id)}`\n\n  if (hasArgs) {\n    url += `?${queryString.stringify(options)}`\n  }\n\n  const response = await fetch(url)\n    .then(parseFetchResponse)\n    .catch((err) => {\n      err._id = id\n\n      throw err\n    })\n\n  return response\n}\n","import { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\nexport interface InfoResponse {\n  db_name: string\n  update_seq: string\n  sizes: {\n    file: number\n    external: number\n    active: number\n  }\n  purge_seq: number\n  other: {\n    data_size: number\n  }\n  doc_del_count: number\n  doc_count: number\n  disk_size: number\n  disk_format_version: number\n  data_size: number\n  compact_running: Boolean\n  cluster: {\n    q: number\n    n: number\n    w: number\n    r: number\n  }\n  instance_start_time: number\n}\n\nexport async function info(context: CouchDbContext): Promise<InfoResponse> {\n  const { fetch, dbUrl, dbName } = context.couchDb\n  let url = `${dbUrl}/${dbName}`\n\n  const response = await fetch(url).then(parseFetchResponse)\n\n  return response\n}\n","import queryString from 'qs'\nimport { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\nexport interface QueryOptions {\n  ddoc: string\n  view: string\n  conflicts?: boolean\n  descending?: boolean\n  endkey?: any | any[]\n  group?: boolean\n  group_level?: number\n  include_docs?: boolean\n  attachments?: boolean\n  att_encoding_info?: boolean\n  inclusive_end?: boolean\n  key?: any | any[]\n  keys?: any | any[]\n  limit?: number\n  reduce?: boolean\n  skip?: number\n  sorted?: boolean\n  stable?: boolean\n  stale?: string\n  startkey?: any | any[]\n  update?: string\n  update_seq?: boolean\n}\n\nexport interface QueryResponse<T> {\n  offset: number\n  update_seq: any | any[]\n  total_rows: number\n  rows: Array<{\n    id: string\n    key?: any | any[]\n    value?: any\n    doc?: T\n  }>\n}\nexport async function query<T = any>(\n  context: CouchDbContext,\n  { view, ddoc, key, keys, ...options }: QueryOptions\n): Promise<QueryResponse<T>> {\n  const { fetch, dbUrl, dbName, onDocumentsSaved } = context.couchDb\n  const postOptions = { key, keys }\n\n  let url = `${dbUrl}/${dbName}/_design/${ddoc}/_view/${view}`\n\n  if (options) {\n    url += `?${queryString.stringify(options)}`\n  }\n\n  const hasArgs = Object.keys(postOptions).length > 0\n  const fetchOptions: any = {}\n  if (hasArgs) {\n    fetchOptions.method = 'POST'\n    fetchOptions.body = JSON.stringify(postOptions)\n    fetchOptions.headers = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }\n  }\n\n  const response = await fetch(url, fetchOptions).then(parseFetchResponse)\n\n  return response\n}\n","import { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\nexport interface SearchOptions {\n  index: string\n  ddoc: string\n  query: string\n  bookmark?: string\n  counts?: string[]\n  drilldown?: any\n  group_field?: string\n  group_limit?: number\n  group_sort?: any\n  highlight_fields?: string[]\n  highlight_pre_tag?: string\n  highlight_post_tag?: string\n  highlight_number?: number\n  highlight_size?: number\n  include_docs?: boolean\n  include_fields?: string[]\n  limit?: number\n  ranges?: any\n  sort?: string | string[]\n  stale?: string\n}\n\nexport interface SearchResponse<T> {\n  total_rows: number\n  bookmark: string\n  rows: Array<{\n    id: string\n    order: number[]\n    fields: Record<string, any>\n    doc?: T\n  }>\n  counts?: any\n}\n\nexport async function search<T = any>(\n  context: CouchDbContext,\n  { index, ddoc, ...options }: SearchOptions\n): Promise<SearchResponse<T>> {\n  const { fetch, dbUrl, dbName } = context.couchDb\n\n  let url = `${dbUrl}/${dbName}/_design/${ddoc}/_search/${index}`\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(options),\n  }).then(parseFetchResponse)\n\n  return response\n}\n","import { CouchDbDocument } from '../types'\nimport { CouchDbContext } from '../createContext'\nimport parseFetchResponse from '../util/parseFetchResponse'\n\nexport async function createDb<T extends CouchDbDocument>(\n  context: CouchDbContext\n): Promise<T> {\n  const { fetch, dbUrl, dbName } = context.couchDb\n  let url = `${dbUrl}/${dbName}`\n\n  const response = await fetch(url, { method: 'PUT' }).then(parseFetchResponse)\n\n  return response\n}\n","import { gql } from 'apollo-server-core'\nimport { createResolver } from '../../util/createResolver'\nimport { find } from '../../couchdb'\n\nexport const typeDefs = gql`\n  type FindResponse {\n    execution_stats: JSON\n    bookmark: String\n    warning: String\n    docs: [JSON!]\n  }\n\n  extend type Query {\n    find(\n      selector: JSON!\n      limit: Int\n      skip: Int\n      sort: Int\n      fields: [String!]\n      use_index: [String!]\n      r: Int\n      bookmark: String\n      update: Boolean\n      stable: Boolean\n      stale: String\n      execution_stats: Boolean\n    ): FindResponse\n  }\n`\n\nexport const resolvers = {\n  Query: {\n    find: createResolver((parent, args, context, info) => {\n      return find(context, args)\n    }),\n  },\n}\n","import { gql } from 'apollo-server-core'\nimport { createResolver } from '../../util/createResolver'\nimport { get } from '../../couchdb'\n\n/**\n * Generic GET on a document\n */\nexport const typeDefs = gql`\n  type GetResponse {\n    _id: String!\n    _rev: String\n    document: JSON\n  }\n\n  extend type Query {\n    get(\n      id: String!\n      rev: String\n      revs: Boolean\n      revs_info: Boolean\n      open_revs: Boolean\n      conflicts: Boolean\n      attachments: Boolean\n      latest: Boolean\n    ): GetResponse\n  }\n`\n\nexport const resolvers = {\n  Query: {\n    get: createResolver(async (parent, { id, ...args }, context, info) => {\n      const document = await get(context, id, args)\n      return {\n        _id: document._id,\n        _rev: document._rev,\n        document,\n      }\n    }),\n  },\n}\n","import { gql } from 'apollo-server-core'\nimport { createResolver } from '../../util/createResolver'\nimport { info } from '../../couchdb/info'\n\nexport const typeDefs = gql`\n  type Sizes {\n    file: Int\n    external: Int\n    active: Int\n  }\n\n  type Other {\n    data_size: Int\n  }\n\n  type Cluster {\n    q: Int\n    n: Int\n    w: Int\n    r: Int\n  }\n\n  type InfoResponse {\n    db_name: String\n    update_seq: String\n    sizes: Sizes\n    purge_seq: Int\n    other: Other\n    doc_del_count: Int\n    doc_count: Int\n    disk_size: Int\n    disk_format_version: Int\n    data_size: Int\n    compact_running: Boolean\n    cluster: Cluster\n    instance_start_time: Int\n  }\n\n  extend type Query {\n    info: InfoResponse\n  }\n`\n\nexport const resolvers = {\n  Query: {\n    info: createResolver((parent, args, context) => {\n      return info(context)\n    }),\n  },\n}\n","import { gql } from 'apollo-server-core'\nimport { createResolver } from '../../util/createResolver'\nimport { query, QueryOptions } from '../../couchdb/query'\n\nexport const typeDefs = gql`\n  type QueryResponse {\n    offset: Int\n    update_seq: JSON\n    total_rows: Int\n    rows: [QueryRow!]\n  }\n\n  type QueryRow {\n    id: String\n    key: JSON\n    value: JSON\n  }\n\n  extend type Query {\n    query(\n      ddoc: String!\n      view: String!\n      conflicts: Boolean\n      descending: Boolean\n      endkey: JSON\n      group: Boolean\n      group_level: Int\n      include_docs: Boolean\n      attachments: Boolean\n      att_encoding_info: Boolean\n      inclusive_end: Boolean\n      key: JSON\n      keys: [JSON!]\n      limit: Int\n      reduce: Boolean\n      skip: Int\n      sorted: Boolean\n      stable: Boolean\n      stale: String\n      startkey: JSON\n      update: String\n      update_seq: Boolean\n    ): QueryResponse\n  }\n`\n\nexport const resolvers = {\n  Query: {\n    query: createResolver<QueryOptions>(async (parent, args, context, info) => {\n      return query(context, args)\n    }),\n  },\n}\n","import { gql } from 'apollo-server-core'\nimport { createResolver } from '../../util/createResolver'\nimport { search, SearchOptions } from '../../couchdb/search'\n\nexport const typeDefs = gql`\n  type SearchResponse {\n    total_rows: Int!\n    bookmark: String!\n    rows: [SearchRow]!\n    counts: JSON\n  }\n\n  type SearchRow {\n    id: String!\n    order: [Int!]!\n    fields: JSON!\n    doc: JSON\n  }\n\n  extend type Query {\n    search(\n      index: String!\n      ddoc: String!\n      bookmark: String\n      counts: [String!]\n      drilldown: JSON\n      group_field: String\n      group_limit: Int\n      group_sort: JSON\n      highlight_fields: [String!]\n      highlight_pre_tag: String\n      highlight_post_tag: String\n      highlight_number: Int\n      highlight_size: Int\n      include_docs: Boolean\n      include_fields: [String!]\n      limit: Int\n      query: String!\n      ranges: JSON\n      sort: [String!]\n      stale: String\n    ): SearchResponse\n  }\n`\n\nexport const resolvers = {\n  Query: {\n    search: createResolver<SearchOptions>(\n      async (parent, args, context, info) => {\n        return search(context, args)\n      }\n    ),\n  },\n}\n","import {\n  GraphQLModule,\n  GraphQLModuleOptions,\n  Resolvers,\n  ModuleContext,\n} from '@graphql-modules/core'\nimport { CouchDbContext } from './createContext'\nimport * as mutations from './graphql/mutations'\nimport * as queries from './graphql/queries'\nimport { base } from './graphql/base'\n\nexport interface CouchDBModuleOptions<\n  Config = any,\n  Session extends object = any,\n  Context = CouchDbContext,\n  SelfResolvers extends Resolvers<any, ModuleContext<Context>> = Resolvers<\n    any,\n    ModuleContext<Context>\n  >\n> extends GraphQLModuleOptions<Config, Session, Context, SelfResolvers> {\n  cloudant?: boolean\n}\n\nexport function createCouchDbModule<\n  Config = any,\n  Session extends object = any,\n  Context = CouchDbContext,\n  SelfResolvers extends Resolvers<any, ModuleContext<Context>> = Resolvers<\n    any,\n    ModuleContext<Context>\n  >\n>(\n  {\n    cloudant,\n    ...options\n  }: CouchDBModuleOptions<Config, Session, Context, SelfResolvers>,\n  moduleConfig?: Config\n) {\n  // separate cloudant queries from couchdb\n  const { search, ...couchdbQueries } = queries\n\n  // combine typeDefs\n  const typeDefs = [\n    base.typeDefs,\n    ...Object.keys(cloudant ? queries : couchdbQueries).map(\n      (key) => queries[key].typeDefs\n    ),\n    ...Object.keys(mutations).map((key) => mutations[key].typeDefs),\n  ]\n\n  if (options.typeDefs) {\n    if (Array.isArray(options.typeDefs)) {\n      typeDefs.push(...options.typeDefs)\n    } else {\n      typeDefs.push(options.typeDefs)\n    }\n  }\n\n  // combine resolvers\n  const resolvers = [\n    ...Object.keys(cloudant ? queries : couchdbQueries).map(\n      (key) => queries[key].resolvers\n    ),\n    ...Object.keys(mutations).map((key) => mutations[key].resolvers),\n  ]\n\n  if (options.resolvers) {\n    if (Array.isArray(options.resolvers)) {\n      resolvers.push(...options.resolvers)\n    } else {\n      resolvers.push(options.resolvers)\n    }\n  }\n\n  return new GraphQLModule(\n    {\n      ...options,\n      typeDefs,\n      resolvers,\n    },\n    moduleConfig\n  )\n}\n","import 'isomorphic-fetch'\nimport { CouchDbDocument } from './types'\n\nexport interface CouchDbContext {\n  couchDb: {\n    dbUrl: string\n    dbName: string\n\n    /**\n     * The fetch function used by the requests made to the couchdb server\n     *\n     * default is node-fetch\n     */\n    fetch: typeof fetch\n\n    onResolveConflict?: <T extends CouchDbDocument>(args: {\n      document: T\n      conflicts: T[]\n      context: CouchDbContext\n    }) => T | Promise<T>\n    onConflictsResolved?: <T extends CouchDbDocument>(args: {\n      documents: T[]\n      context: CouchDbContext\n    }) => any\n    onDocumentsSaved?: <T extends CouchDbDocument>(args: {\n      documents: T[]\n      context: CouchDbContext\n    }) => any\n  }\n}\n\nexport function createContext(args: {\n  dbUrl: CouchDbContext['couchDb']['dbUrl']\n  dbName: CouchDbContext['couchDb']['dbName']\n\n  /**\n   * The fetch function used by the requests made to the couchdb server\n   *\n   * default is isomorphic-fetch\n   */\n  fetch?: CouchDbContext['couchDb']['fetch']\n\n  onResolveConflict?: CouchDbContext['couchDb']['onResolveConflict']\n  onConflictsResolved?: CouchDbContext['couchDb']['onConflictsResolved']\n  onDocumentsSaved?: CouchDbContext['couchDb']['onDocumentsSaved']\n}): CouchDbContext {\n  return {\n    couchDb: {\n      fetch,\n      ...args,\n    },\n  }\n}\n"],"names":["base","typeDefs","gql","undefined","createResolver","resolver","parseFetchResponse","response","status","json","error","Error","statusText","getConflictsByDocument","documents","context","couchDb","fetch","dbUrl","dbName","method","headers","body","JSON","stringify","keys","map","doc","_id","then","res","rows","row","filter","documentsWithConflictRevs","docs","reduce","conflicts","_conflicts","rev","id","results","ok","conflictingDocuments","result","conflictedDoc","find","d","document","original","revToSave","_rev","resolveConflicts","onResolveConflict","onConflictsResolved","Promise","all","Object","resolvedDocument","resolved","Boolean","resolvedDocs","docsToSave","deleted","docId","conflict","_deleted","resolvedDocuments","length","index","put","options","onDocumentsSaved","upsert","new_edits","url","encodeURIComponent","Array","isArray","err","reason","_templateObject","resolvers","Mutation","parent","info","input","bulkDocs","previousRevs","ids","i","allDocs","data","forEach","value","docToSave","saveResult","resolvedDoc","resolvedResult","saveResults","key","endkey","startkey","args","queryString","Query","bulkGet","revs","changes","hasArgs","lastEventId","since","parseInt","get","query","view","ddoc","postOptions","fetchOptions","Accept","search","createDb","createCouchDbModule","moduleConfig","cloudant","couchdbQueries","queries","mutations","push","GraphQLModule","createContext"],"mappings":"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"}